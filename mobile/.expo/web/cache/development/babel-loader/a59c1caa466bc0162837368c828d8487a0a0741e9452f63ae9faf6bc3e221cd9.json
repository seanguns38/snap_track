{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport axios from 'axios';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PreviewScreen(_ref) {\n  var route = _ref.route;\n  var uri = route.params.uri;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    songs = _useState2[0],\n    setSongs = _useState2[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var form = new FormData();\n      form.append('image', {\n        uri: uri,\n        name: 'screenshot.jpg',\n        type: 'image/jpeg'\n      });\n      var _yield$axios$post = yield axios.post('http://localhost:4000/songs/parse', form),\n        data = _yield$axios$post.data;\n      setSongs(data.songs);\n    })();\n  }, []);\n  var addAll = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      yield axios.post('http://localhost:4000/songs/add', {\n        songs: songs,\n        service: 'spotify'\n      });\n      alert('Added to playlist!');\n    });\n    return function addAll() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 16\n    },\n    children: [_jsx(Image, {\n      source: {\n        uri: uri\n      },\n      style: {\n        width: '100%',\n        height: 200\n      }\n    }), _jsx(FlatList, {\n      data: songs,\n      keyExtractor: function keyExtractor(item, i) {\n        return i.toString();\n      },\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsx(SongItem, {\n          title: item.title,\n          artist: item.artist\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Add All to Spotify\",\n      onPress: addAll\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","View","Text","Button","Image","FlatList","axios","jsx","_jsx","jsxs","_jsxs","PreviewScreen","_ref","route","uri","params","_useState","_useState2","_slicedToArray","songs","setSongs","_asyncToGenerator","form","FormData","append","name","type","_yield$axios$post","post","data","addAll","_ref3","service","alert","apply","arguments","style","flex","padding","children","source","width","height","keyExtractor","item","i","toString","renderItem","_ref4","SongItem","title","artist","onPress"],"sources":["/Users/fergiewergie/Desktop/snap_track/mobile/screens/PreviewScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, Button, Image, FlatList } from 'react-native';\nimport axios from 'axios';\n\nexport default function PreviewScreen({ route }) {\n  const { uri } = route.params;\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const form = new FormData();\n      form.append('image', {\n        uri,\n        name: 'screenshot.jpg',\n        type: 'image/jpeg'\n      });\n      const { data } = await axios.post('http://localhost:4000/songs/parse', form);\n      setSongs(data.songs);\n    })();\n  }, []);\n\n  const addAll = async () => {\n    await axios.post('http://localhost:4000/songs/add', { songs, service: 'spotify' });\n    alert('Added to playlist!');\n  };\n\n  return (\n    <View style={{ flex: 1, padding: 16 }}>\n      <Image source={{ uri }} style={{ width: '100%', height: 200 }} />\n      <FlatList\n        data={songs}\n        keyExtractor={(item, i) => i.toString()}\n        renderItem={({ item }) => <SongItem title={item.title} artist={item.artist} />}\n      />\n      <Button title=\"Add All to Spotify\" onPress={addAll} />\n    </View>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAEnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE1B,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAY;EAAA,IAATC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAC3C,IAAQC,GAAG,GAAKD,KAAK,CAACE,MAAM,CAApBD,GAAG;EACX,IAAAE,SAAA,GAA0BhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtBlB,SAAS,CAAC,YAAM;IACdsB,iBAAA,CAAC,aAAY;MACX,IAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC3BD,IAAI,CAACE,MAAM,CAAC,OAAO,EAAE;QACnBV,GAAG,EAAHA,GAAG;QACHW,IAAI,EAAE,gBAAgB;QACtBC,IAAI,EAAE;MACR,CAAC,CAAC;MACF,IAAAC,iBAAA,SAAuBrB,KAAK,CAACsB,IAAI,CAAC,mCAAmC,EAAEN,IAAI,CAAC;QAApEO,IAAI,GAAAF,iBAAA,CAAJE,IAAI;MACZT,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC;IACtB,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMW,MAAM;IAAA,IAAAC,KAAA,GAAAV,iBAAA,CAAG,aAAY;MACzB,MAAMf,KAAK,CAACsB,IAAI,CAAC,iCAAiC,EAAE;QAAET,KAAK,EAALA,KAAK;QAAEa,OAAO,EAAE;MAAU,CAAC,CAAC;MAClFC,KAAK,CAAC,oBAAoB,CAAC;IAC7B,CAAC;IAAA,gBAHKH,MAAMA,CAAA;MAAA,OAAAC,KAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;EAAA,GAGX;EAED,OACEzB,KAAA,CAACT,IAAI;IAACmC,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,GACpC/B,IAAA,CAACJ,KAAK;MAACoC,MAAM,EAAE;QAAE1B,GAAG,EAAHA;MAAI,CAAE;MAACsB,KAAK,EAAE;QAAEK,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAI;IAAE,CAAE,CAAC,EACjElC,IAAA,CAACH,QAAQ;MACPwB,IAAI,EAAEV,KAAM;MACZwB,YAAY,EAAE,SAAdA,YAAYA,CAAGC,IAAI,EAAEC,CAAC;QAAA,OAAKA,CAAC,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MACxCC,UAAU,EAAE,SAAZA,UAAUA,CAAAC,KAAA;QAAA,IAAKJ,IAAI,GAAAI,KAAA,CAAJJ,IAAI;QAAA,OAAOpC,IAAA,CAACyC,QAAQ;UAACC,KAAK,EAAEN,IAAI,CAACM,KAAM;UAACC,MAAM,EAAEP,IAAI,CAACO;QAAO,CAAE,CAAC;MAAA;IAAC,CAChF,CAAC,EACF3C,IAAA,CAACL,MAAM;MAAC+C,KAAK,EAAC,oBAAoB;MAACE,OAAO,EAAEtB;IAAO,CAAE,CAAC;EAAA,CAClD,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}