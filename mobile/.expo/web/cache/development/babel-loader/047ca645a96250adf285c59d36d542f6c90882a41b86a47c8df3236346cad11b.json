{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport ReanimatedModule from \"../../ReanimatedModule\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport InternalAnimatedValue from \"./AnimatedValue\";\nimport { createAnimatedAlways } from \"./AnimatedAlways\";\nimport invariant from 'invariant';\nimport createEventObjectProxyPolyfill from \"./createEventObjectProxyPolyfill\";\nfunction sanitizeArgMapping(argMapping) {\n  var eventMappings = [];\n  var alwaysNodes = [];\n  var getNode = function getNode(node) {\n    if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos') {\n      return node;\n    }\n    return node.__nodeID;\n  };\n  var _traverse = function traverse(value, path) {\n    if (value instanceof InternalAnimatedValue) {\n      eventMappings.push(path.concat(getNode(value)));\n    } else if (typeof value === 'object' && value.__val) {\n      eventMappings.push(path.concat(getNode(value.__val)));\n    } else if (typeof value === 'function') {\n      var node = new InternalAnimatedValue(0);\n      alwaysNodes.push(createAnimatedAlways(value(node)));\n      eventMappings.push(path.concat(getNode(node)));\n    } else if (typeof value === 'object') {\n      for (var key in value) {\n        _traverse(value[key], path.concat(key));\n      }\n    }\n  };\n  invariant(argMapping[0] && argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');\n  var ev = argMapping[0].nativeEvent;\n  if (typeof ev === 'object') {\n    _traverse(ev, []);\n  } else if (typeof ev === 'function') {\n    var proxyHandler = {\n      get: function get(target, name) {\n        if (name === '__isProxy') {\n          return true;\n        }\n        if (!target[name] && name !== '__val') {\n          target[name] = new Proxy({}, proxyHandler);\n        }\n        return target[name];\n      },\n      set: function set(target, prop, value) {\n        if (prop === '__val') {\n          target[prop] = value;\n          return true;\n        }\n        return false;\n      }\n    };\n    var proxy = typeof Proxy === 'function' ? new Proxy({}, proxyHandler) : createEventObjectProxyPolyfill();\n    alwaysNodes.push(createAnimatedAlways(ev(proxy)));\n    _traverse(proxy, []);\n  }\n  return {\n    eventMappings: eventMappings,\n    alwaysNodes: alwaysNodes\n  };\n}\nvar AnimatedEvent = function (_AnimatedNode) {\n  function AnimatedEvent(argMapping) {\n    var _this;\n    var _config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, AnimatedEvent);\n    var _sanitizeArgMapping = sanitizeArgMapping(argMapping),\n      eventMappings = _sanitizeArgMapping.eventMappings,\n      alwaysNodes = _sanitizeArgMapping.alwaysNodes;\n    _this = _callSuper(this, AnimatedEvent, [{\n      type: 'event',\n      argMapping: eventMappings\n    }]);\n    _this.__isNative = true;\n    _this._alwaysNodes = alwaysNodes;\n    return _this;\n  }\n  _inherits(AnimatedEvent, _AnimatedNode);\n  return _createClass(AnimatedEvent, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedEvent, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"attachEvent\",\n    value: function attachEvent(viewRef, eventName) {\n      for (var i = 0; i < this._alwaysNodes.length; i++) {\n        this._alwaysNodes[i].__attach();\n      }\n      this.__attach();\n      var viewTag = findNodeHandle(viewRef);\n      ReanimatedModule.attachEvent(viewTag, eventName, this.__nodeID);\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      return 0;\n    }\n  }, {\n    key: \"detachEvent\",\n    value: function detachEvent(viewRef, eventName) {\n      for (var i = 0; i < this._alwaysNodes.length; i++) {\n        this._alwaysNodes[i].isNativelyInitialized() && this._alwaysNodes[i].__detach();\n      }\n      var viewTag = findNodeHandle(viewRef);\n      ReanimatedModule.detachEvent(viewTag, eventName, this.__nodeID);\n      this.__detach();\n    }\n  }]);\n}(AnimatedNode);\nexport { AnimatedEvent as default };\nexport function createAnimatedEvent(argMapping, config) {\n  return new AnimatedEvent(argMapping, config);\n}","map":{"version":3,"names":["ReanimatedModule","AnimatedNode","InternalAnimatedValue","createAnimatedAlways","invariant","createEventObjectProxyPolyfill","sanitizeArgMapping","argMapping","eventMappings","alwaysNodes","getNode","node","Platform","OS","__nodeID","traverse","value","path","push","concat","__val","key","nativeEvent","ev","proxyHandler","get","target","name","Proxy","set","prop","proxy","AnimatedEvent","_AnimatedNode","_this","_config","arguments","length","undefined","_classCallCheck","_sanitizeArgMapping","_callSuper","type","__isNative","_alwaysNodes","_inherits","_createClass","toString","attachEvent","viewRef","eventName","i","__attach","viewTag","findNodeHandle","__onEvaluate","detachEvent","isNativelyInitialized","__detach","default","createAnimatedEvent","config"],"sources":["/Users/fergiewergie/Desktop/snap_track/mobile/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedEvent.js"],"sourcesContent":["import { Platform, findNodeHandle } from 'react-native';\nimport ReanimatedModule from '../../ReanimatedModule';\n\nimport AnimatedNode from './AnimatedNode';\nimport InternalAnimatedValue from './AnimatedValue';\nimport { createAnimatedAlways } from './AnimatedAlways';\n\nimport invariant from 'invariant';\nimport createEventObjectProxyPolyfill from './createEventObjectProxyPolyfill';\n\nfunction sanitizeArgMapping(argMapping) {\n  // Find animated values in `argMapping` and create an array representing their\n  // key path inside the `nativeEvent` object. Ex.: ['contentOffset', 'x'].\n  const eventMappings = [];\n  const alwaysNodes = [];\n\n  const getNode = (node) => {\n    if (\n      Platform.OS === 'web' ||\n      Platform.OS === 'windows' ||\n      Platform.OS === 'macos'\n    ) {\n      return node;\n    }\n    return node.__nodeID;\n  };\n\n  const traverse = (value, path) => {\n    if (value instanceof InternalAnimatedValue) {\n      eventMappings.push(path.concat(getNode(value)));\n    } else if (typeof value === 'object' && value.__val) {\n      eventMappings.push(path.concat(getNode(value.__val)));\n    } else if (typeof value === 'function') {\n      const node = new InternalAnimatedValue(0);\n      alwaysNodes.push(createAnimatedAlways(value(node)));\n      eventMappings.push(path.concat(getNode(node)));\n    } else if (typeof value === 'object') {\n      for (const key in value) {\n        traverse(value[key], path.concat(key));\n      }\n    }\n  };\n\n  invariant(\n    argMapping[0] && argMapping[0].nativeEvent,\n    'Native driven events only support animated values contained inside `nativeEvent`.'\n  );\n\n  // Assume that the event containing `nativeEvent` is always the first argument.\n  const ev = argMapping[0].nativeEvent;\n  if (typeof ev === 'object') {\n    traverse(ev, []);\n  } else if (typeof ev === 'function') {\n    const proxyHandler = {\n      get: function (target, name) {\n        if (name === '__isProxy') {\n          return true;\n        }\n        if (!target[name] && name !== '__val') {\n          target[name] = new Proxy({}, proxyHandler);\n        }\n        return target[name];\n      },\n      set: function (target, prop, value) {\n        if (prop === '__val') {\n          target[prop] = value;\n          return true;\n        }\n        return false;\n      },\n    };\n\n    const proxy =\n      typeof Proxy === 'function'\n        ? new Proxy({}, proxyHandler)\n        : createEventObjectProxyPolyfill();\n    alwaysNodes.push(createAnimatedAlways(ev(proxy)));\n    traverse(proxy, []);\n  }\n\n  return { eventMappings, alwaysNodes };\n}\n\nexport default class AnimatedEvent extends AnimatedNode {\n  constructor(argMapping, _config = {}) {\n    const { eventMappings, alwaysNodes } = sanitizeArgMapping(argMapping);\n    super({ type: 'event', argMapping: eventMappings });\n    this._alwaysNodes = alwaysNodes;\n  }\n\n  toString() {\n    return `AnimatedEvent, id: ${this.__nodeID}`;\n  }\n\n  // The below field is a temporary workaround to make AnimatedEvent object be recognized\n  // as Animated.event event callback and therefore filtered out from being send over the\n  // bridge which was causing the object to be frozen in JS.\n  __isNative = true;\n\n  attachEvent(viewRef, eventName) {\n    for (let i = 0; i < this._alwaysNodes.length; i++) {\n      this._alwaysNodes[i].__attach();\n    }\n    this.__attach();\n    const viewTag = findNodeHandle(viewRef);\n    ReanimatedModule.attachEvent(viewTag, eventName, this.__nodeID);\n  }\n\n  __onEvaluate() {\n    return 0;\n  }\n\n  detachEvent(viewRef, eventName) {\n    for (let i = 0; i < this._alwaysNodes.length; i++) {\n      this._alwaysNodes[i].isNativelyInitialized() &&\n        this._alwaysNodes[i].__detach();\n    }\n    const viewTag = findNodeHandle(viewRef);\n    ReanimatedModule.detachEvent(viewTag, eventName, this.__nodeID);\n    this.__detach();\n  }\n}\n\nexport function createAnimatedEvent(argMapping, config) {\n  return new AnimatedEvent(argMapping, config);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}