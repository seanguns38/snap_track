{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport invariant from 'invariant';\nimport { val } from \"../val\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport InternalAnimatedValue from \"./InternalAnimatedValue\";\nvar AnimatedBlock = function (_AnimatedNode) {\n  function AnimatedBlock(array) {\n    var _this;\n    _classCallCheck(this, AnimatedBlock);\n    invariant(array.every(function (el) {\n      return el instanceof AnimatedNode;\n    }), \"Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes\");\n    _this = _callSuper(this, AnimatedBlock, [{\n      type: 'block',\n      block: array\n    }, array]);\n    _this._array = array;\n    return _this;\n  }\n  _inherits(AnimatedBlock, _AnimatedNode);\n  return _createClass(AnimatedBlock, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedBlock, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var result;\n      this._array.forEach(function (node) {\n        result = val(node);\n      });\n      return result;\n    }\n  }]);\n}(AnimatedNode);\nexport function createAnimatedBlock(items) {\n  return adapt(items);\n}\nfunction nodify(v) {\n  if (typeof v === 'object' && v != null && v.__isProxy) {\n    if (!v.__val) {\n      v.__val = new InternalAnimatedValue(0);\n    }\n    return v.__val;\n  }\n  return v instanceof AnimatedNode ? v : InternalAnimatedValue.valueForConstant(v);\n}\nexport function adapt(v) {\n  return Array.isArray(v) ? new AnimatedBlock(v.map(function (node) {\n    return adapt(node);\n  })) : nodify(v);\n}","map":{"version":3,"names":["invariant","val","AnimatedNode","InternalAnimatedValue","AnimatedBlock","_AnimatedNode","array","_this","_classCallCheck","every","el","_callSuper","type","block","_array","_inherits","_createClass","key","value","toString","__nodeID","__onEvaluate","result","forEach","node","createAnimatedBlock","items","adapt","nodify","v","__isProxy","__val","valueForConstant","Array","isArray","map"],"sources":["/Users/fergiewergie/Desktop/snap_track/mobile/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedBlock.js"],"sourcesContent":["import invariant from 'invariant';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\nimport InternalAnimatedValue from './InternalAnimatedValue';\n\nclass AnimatedBlock extends AnimatedNode {\n  _array;\n\n  constructor(array) {\n    invariant(\n      array.every((el) => el instanceof AnimatedNode),\n      `Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes`\n    );\n    super({ type: 'block', block: array }, array);\n    this._array = array;\n  }\n\n  toString() {\n    return `AnimatedBlock, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    let result;\n    this._array.forEach((node) => {\n      result = val(node);\n    });\n    return result;\n  }\n}\n\nexport function createAnimatedBlock(items) {\n  return adapt(items);\n}\n\nfunction nodify(v) {\n  if (typeof v === 'object' && v?.__isProxy) {\n    if (!v.__val) {\n      v.__val = new InternalAnimatedValue(0);\n    }\n    return v.__val;\n  }\n  // TODO: cache some typical static values (e.g. 0, 1, -1)\n  return v instanceof AnimatedNode\n    ? v\n    : InternalAnimatedValue.valueForConstant(v);\n}\n\nexport function adapt(v) {\n  return Array.isArray(v)\n    ? new AnimatedBlock(v.map((node) => adapt(node)))\n    : nodify(v);\n}\n"],"mappings":";;;;;;;AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,SAASC,GAAG;AACZ,OAAOC,YAAY;AACnB,OAAOC,qBAAqB;AAAgC,IAEtDC,aAAa,aAAAC,aAAA;EAGjB,SAAAD,cAAYE,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAJ,aAAA;IACjBJ,SAAS,CACPM,KAAK,CAACG,KAAK,CAAC,UAACC,EAAE;MAAA,OAAKA,EAAE,YAAYR,YAAY;IAAA,EAAC,6IAEjD,CAAC;IACDK,KAAA,GAAAI,UAAA,OAAAP,aAAA,GAAM;MAAEQ,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAEP;IAAM,CAAC,EAAEA,KAAK;IAC5CC,KAAA,CAAKO,MAAM,GAAGR,KAAK;IAAC,OAAAC,KAAA;EACtB;EAACQ,SAAA,CAAAX,aAAA,EAAAC,aAAA;EAAA,OAAAW,YAAA,CAAAZ,aAAA;IAAAa,GAAA;IAAAC,KAAA,EAED,SAAAC,QAAQA,CAAA,EAAG;MACT,+BAA6B,IAAI,CAACC,QAAQ;IAC5C;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAG,YAAYA,CAAA,EAAG;MACb,IAAIC,MAAM;MACV,IAAI,CAACR,MAAM,CAACS,OAAO,CAAC,UAACC,IAAI,EAAK;QAC5BF,MAAM,GAAGrB,GAAG,CAACuB,IAAI,CAAC;MACpB,CAAC,CAAC;MACF,OAAOF,MAAM;IACf;EAAC;AAAA,EAtByBpB,YAAY;AAyBxC,OAAO,SAASuB,mBAAmBA,CAACC,KAAK,EAAE;EACzC,OAAOC,KAAK,CAACD,KAAK,CAAC;AACrB;AAEA,SAASE,MAAMA,CAACC,CAAC,EAAE;EACjB,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,YAADA,CAAC,CAAEC,SAAS,EAAE;IACzC,IAAI,CAACD,CAAC,CAACE,KAAK,EAAE;MACZF,CAAC,CAACE,KAAK,GAAG,IAAI5B,qBAAqB,CAAC,CAAC,CAAC;IACxC;IACA,OAAO0B,CAAC,CAACE,KAAK;EAChB;EAEA,OAAOF,CAAC,YAAY3B,YAAY,GAC5B2B,CAAC,GACD1B,qBAAqB,CAAC6B,gBAAgB,CAACH,CAAC,CAAC;AAC/C;AAEA,OAAO,SAASF,KAAKA,CAACE,CAAC,EAAE;EACvB,OAAOI,KAAK,CAACC,OAAO,CAACL,CAAC,CAAC,GACnB,IAAIzB,aAAa,CAACyB,CAAC,CAACM,GAAG,CAAC,UAACX,IAAI;IAAA,OAAKG,KAAK,CAACH,IAAI,CAAC;EAAA,EAAC,CAAC,GAC/CI,MAAM,CAACC,CAAC,CAAC;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}