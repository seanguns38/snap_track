{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { withTiming, withSpring } from \"../../animation\";\nimport { BaseAnimationBuilder } from \"./BaseAnimationBuilder\";\nexport var ComplexAnimationBuilder = function (_BaseAnimationBuilder) {\n  function ComplexAnimationBuilder() {\n    _classCallCheck(this, ComplexAnimationBuilder);\n    return _callSuper(this, ComplexAnimationBuilder, arguments);\n  }\n  _inherits(ComplexAnimationBuilder, _BaseAnimationBuilder);\n  return _createClass(ComplexAnimationBuilder, [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      this.easingV = easingFunction;\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      this.rotateV = degree;\n      return this;\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      this.type = withSpring;\n      return this;\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping2) {\n      this.dampingV = _damping2;\n      return this;\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass2) {\n      this.massV = _mass2;\n      return this;\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness2) {\n      this.stiffnessV = _stiffness2;\n      return this;\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping2) {\n      this.overshootClampingV = _overshootClamping2;\n      return this;\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold2) {\n      this.restDisplacementThresholdV = _restDisplacementThreshold2;\n      return this;\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold2) {\n      this.restSpeedThresholdV = _restSpeedThreshold2;\n      return this;\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      this.initialValues = values;\n      return this;\n    }\n  }, {\n    key: \"getAnimationAndConfig\",\n    value: function getAnimationAndConfig() {\n      var duration = this.durationV;\n      var easing = this.easingV;\n      var rotate = this.rotateV;\n      var type = this.type ? this.type : withTiming;\n      var damping = this.dampingV;\n      var mass = this.massV;\n      var stiffness = this.stiffnessV;\n      var overshootClamping = this.overshootClampingV;\n      var restDisplacementThreshold = this.restDisplacementThresholdV;\n      var restSpeedThreshold = this.restSpeedThresholdV;\n      var animation = type;\n      var config = {};\n      if (type === withTiming) {\n        if (easing) {\n          config.easing = easing;\n        }\n        if (duration) {\n          config.duration = duration;\n        }\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      } else {\n        if (damping) {\n          config.damping = damping;\n        }\n        if (mass) {\n          config.mass = mass;\n        }\n        if (stiffness) {\n          config.stiffness = stiffness;\n        }\n        if (overshootClamping) {\n          config.overshootClamping = overshootClamping;\n        }\n        if (restDisplacementThreshold) {\n          config.restDisplacementThreshold = restDisplacementThreshold;\n        }\n        if (restSpeedThreshold) {\n          config.restSpeedThreshold = restSpeedThreshold;\n        }\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      }\n      return [animation, config];\n    }\n  }], [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      var instance = this.createInstance();\n      return instance.easing(easingFunction);\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      var instance = this.createInstance();\n      return instance.rotate(degree);\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      var instance = this.createInstance();\n      return instance.springify();\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping) {\n      var instance = this.createInstance();\n      return instance.damping(_damping);\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass) {\n      var instance = this.createInstance();\n      return instance.mass(_mass);\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness) {\n      var instance = this.createInstance();\n      return instance.stiffness(_stiffness);\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping) {\n      var instance = this.createInstance();\n      return instance.overshootClamping(_overshootClamping);\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold) {\n      var instance = this.createInstance();\n      return instance.restDisplacementThreshold(_restDisplacementThreshold);\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold) {\n      var instance = this.createInstance();\n      return instance.restSpeedThreshold(_restSpeedThreshold);\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      var instance = this.createInstance();\n      return instance.withInitialValues(values);\n    }\n  }]);\n}(BaseAnimationBuilder);","map":{"version":3,"names":["withTiming","withSpring","BaseAnimationBuilder","ComplexAnimationBuilder","_BaseAnimationBuilder","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","easing","easingFunction","easingV","rotate","degree","rotateV","springify","type","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","restDisplacementThresholdV","restSpeedThreshold","restSpeedThresholdV","withInitialValues","values","initialValues","getAnimationAndConfig","duration","durationV","animation","config","instance","createInstance"],"sources":["/Users/fergiewergie/Desktop/snap_track/mobile/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/animationBuilder/ComplexAnimationBuilder.js"],"sourcesContent":["import { withTiming, withSpring } from '../../animation';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n    static easing(easingFunction) {\n        const instance = this.createInstance();\n        return instance.easing(easingFunction);\n    }\n    easing(easingFunction) {\n        this.easingV = easingFunction;\n        return this;\n    }\n    static rotate(degree) {\n        const instance = this.createInstance();\n        return instance.rotate(degree);\n    }\n    rotate(degree) {\n        this.rotateV = degree;\n        return this;\n    }\n    static springify() {\n        const instance = this.createInstance();\n        return instance.springify();\n    }\n    springify() {\n        this.type = withSpring;\n        return this;\n    }\n    static damping(damping) {\n        const instance = this.createInstance();\n        return instance.damping(damping);\n    }\n    damping(damping) {\n        this.dampingV = damping;\n        return this;\n    }\n    static mass(mass) {\n        const instance = this.createInstance();\n        return instance.mass(mass);\n    }\n    mass(mass) {\n        this.massV = mass;\n        return this;\n    }\n    static stiffness(stiffness) {\n        const instance = this.createInstance();\n        return instance.stiffness(stiffness);\n    }\n    stiffness(stiffness) {\n        this.stiffnessV = stiffness;\n        return this;\n    }\n    static overshootClamping(overshootClamping) {\n        const instance = this.createInstance();\n        return instance.overshootClamping(overshootClamping);\n    }\n    overshootClamping(overshootClamping) {\n        this.overshootClampingV = overshootClamping;\n        return this;\n    }\n    static restDisplacementThreshold(restDisplacementThreshold) {\n        const instance = this.createInstance();\n        return instance.restDisplacementThreshold(restDisplacementThreshold);\n    }\n    restDisplacementThreshold(restDisplacementThreshold) {\n        this.restDisplacementThresholdV = restDisplacementThreshold;\n        return this;\n    }\n    static restSpeedThreshold(restSpeedThreshold) {\n        const instance = this.createInstance();\n        return instance.restSpeedThreshold(restSpeedThreshold);\n    }\n    restSpeedThreshold(restSpeedThreshold) {\n        this.restSpeedThresholdV = restSpeedThreshold;\n        return this;\n    }\n    static withInitialValues(values) {\n        const instance = this.createInstance();\n        return instance.withInitialValues(values);\n    }\n    withInitialValues(values) {\n        this.initialValues = values;\n        return this;\n    }\n    getAnimationAndConfig() {\n        const duration = this.durationV;\n        const easing = this.easingV;\n        const rotate = this.rotateV;\n        const type = this.type ? this.type : withTiming;\n        const damping = this.dampingV;\n        const mass = this.massV;\n        const stiffness = this.stiffnessV;\n        const overshootClamping = this.overshootClampingV;\n        const restDisplacementThreshold = this.restDisplacementThresholdV;\n        const restSpeedThreshold = this.restSpeedThresholdV;\n        const animation = type;\n        const config = {};\n        if (type === withTiming) {\n            if (easing) {\n                config.easing = easing;\n            }\n            if (duration) {\n                config.duration = duration;\n            }\n            if (rotate) {\n                config.rotate = rotate;\n            }\n        }\n        else {\n            if (damping) {\n                config.damping = damping;\n            }\n            if (mass) {\n                config.mass = mass;\n            }\n            if (stiffness) {\n                config.stiffness = stiffness;\n            }\n            if (overshootClamping) {\n                config.overshootClamping = overshootClamping;\n            }\n            if (restDisplacementThreshold) {\n                config.restDisplacementThreshold = restDisplacementThreshold;\n            }\n            if (restSpeedThreshold) {\n                config.restSpeedThreshold = restSpeedThreshold;\n            }\n            if (rotate) {\n                config.rotate = rotate;\n            }\n        }\n        return [animation, config];\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}