{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport invariant from 'invariant';\nimport { adapt } from \"../core/AnimatedBlock\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport { val } from \"../val\";\nvar AnimatedConcat = function (_AnimatedNode) {\n  function AnimatedConcat(input) {\n    var _this;\n    _classCallCheck(this, AnimatedConcat);\n    invariant(input.every(function (el) {\n      return el instanceof AnimatedNode || typeof el === 'number' || typeof el === 'string';\n    }), \"Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: \" + input);\n    _this = _callSuper(this, AnimatedConcat, [{\n      type: 'concat',\n      input: input\n    }, input]);\n    _this._input = input;\n    return _this;\n  }\n  _inherits(AnimatedConcat, _AnimatedNode);\n  return _createClass(AnimatedConcat, [{\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      return this._input.reduce(function (prev, current) {\n        return prev + val(current);\n      }, '');\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedConcat, id: \" + this.__nodeID;\n    }\n  }]);\n}(AnimatedNode);\nexport function createAnimatedConcat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return new AnimatedConcat(args.map(adapt));\n}","map":{"version":3,"names":["invariant","adapt","AnimatedNode","val","AnimatedConcat","_AnimatedNode","input","_this","_classCallCheck","every","el","_callSuper","type","_input","_inherits","_createClass","key","value","__onEvaluate","reduce","prev","current","toString","__nodeID","createAnimatedConcat","_len","arguments","length","args","Array","_key","map"],"sources":["/Users/fergiewergie/Desktop/snap_track/mobile/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedConcat.js"],"sourcesContent":["import invariant from 'invariant';\nimport { adapt } from '../core/AnimatedBlock';\nimport AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\n\nclass AnimatedConcat extends AnimatedNode {\n  constructor(input) {\n    invariant(\n      input.every(\n        (el) =>\n          el instanceof AnimatedNode ||\n          typeof el === 'number' ||\n          typeof el === 'string'\n      ),\n      `Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: ${input}`\n    );\n    super({ type: 'concat', input }, input);\n    this._input = input;\n  }\n\n  __onEvaluate() {\n    return this._input.reduce((prev, current) => prev + val(current), '');\n  }\n\n  toString() {\n    return `AnimatedConcat, id: ${this.__nodeID}`;\n  }\n}\n\nexport function createAnimatedConcat(...args) {\n  return new AnimatedConcat(args.map(adapt));\n}\n"],"mappings":";;;;;;;AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,SAASC,KAAK;AACd,OAAOC,YAAY;AACnB,SAASC,GAAG;AAAiB,IAEvBC,cAAc,aAAAC,aAAA;EAClB,SAAAD,eAAYE,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAJ,cAAA;IACjBJ,SAAS,CACPM,KAAK,CAACG,KAAK,CACT,UAACC,EAAE;MAAA,OACDA,EAAE,YAAYR,YAAY,IAC1B,OAAOQ,EAAE,KAAK,QAAQ,IACtB,OAAOA,EAAE,KAAK,QAAQ;IAAA,CAC1B,CAAC,sJACiJJ,KACpJ,CAAC;IACDC,KAAA,GAAAI,UAAA,OAAAP,cAAA,GAAM;MAAEQ,IAAI,EAAE,QAAQ;MAAEN,KAAK,EAALA;IAAM,CAAC,EAAEA,KAAK;IACtCC,KAAA,CAAKM,MAAM,GAAGP,KAAK;IAAC,OAAAC,KAAA;EACtB;EAACO,SAAA,CAAAV,cAAA,EAAAC,aAAA;EAAA,OAAAU,YAAA,CAAAX,cAAA;IAAAY,GAAA;IAAAC,KAAA,EAED,SAAAC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACL,MAAM,CAACM,MAAM,CAAC,UAACC,IAAI,EAAEC,OAAO;QAAA,OAAKD,IAAI,GAAGjB,GAAG,CAACkB,OAAO,CAAC;MAAA,GAAE,EAAE,CAAC;IACvE;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAK,QAAQA,CAAA,EAAG;MACT,gCAA8B,IAAI,CAACC,QAAQ;IAC7C;EAAC;AAAA,EArB0BrB,YAAY;AAwBzC,OAAO,SAASsB,oBAAoBA,CAAA,EAAU;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAC1C,OAAO,IAAI1B,cAAc,CAACwB,IAAI,CAACG,GAAG,CAAC9B,KAAK,CAAC,CAAC;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}